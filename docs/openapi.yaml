openapi: 3.0.0
info:
  title: Stake Limit Service API
  description: Api made for job application for manipulating tickets with their limit service.
  version: 0.0.1
  
servers:
  - url: http://localhost:8001
    description: Port exposed for local development

tags:
  - name: Sls
  - name: Ticket

paths:
  /api/v1/sls:
    get:
      tags: [Sls]
      summary: Returns a list of stake limit services.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    # status code
          description: A JSON array of all stake limit services
          content:
            application/json:
    post:
      tags: [SLs]
      summary: Adds new Sls 
      responses:
        '200':    # status code
          description: A JSON array of sls
          content:
            application/json:
  /api/v1/sls/:id:
    get:
      tags: [Sls]
      summary: Returns a sls with the requested id
      responses:
        '200':    # status code
          description: A JSON sls 
          content:
            application/json:
    put:
      tags: [Sls]
      summary: Returns a updated sls.
      description: Updates sls.
      responses:
        '200':    # status code
          description: A JSON array of user sls
          content:
            application/json:
    delete:
      tags: [Sls]
      summary: Returns a empty array
      description: Deletes a sls with the request id
      responses:
        '200':    # status code
          description: A JSON array of sls
          content:
            application/json:


  /api/v1/tickets:
    get:
      tags: [Ticket]
      summary: Returns a list of tickets.
      description: Returns tickets
      responses:
        '200':    # status code
          description: A JSON array of tickets
          content:
            application/json:
    post:
      tags: [Ticket]
      summary: Adds new Ticket
      description: Adds new ticket
      responses:
        '200':    # status code
          description: A JSON array with ticket
          content:
            application/json:
                  
  /api/v1/tickets/:id:
    get:
      tags: [Ticket]
      summary: Returns a ticket with requested id
      description: Returns ticket
      responses:
        '200':    # status code
          description: A JSON file with ticket
          content:
            application/json:
              
components:
  schemas:
    Sls:
      type: object
      required:
        - id
        - timeDuration
        - stakeLimit
        - hotPercentage
        - restrictionExpires
      properties:
        id:
          type: uuid
        timeDuration:
          type: integer
        stakeLimit:
          type: integer
        hotPercentage:
          type: integer
        restrictionExpires:
          type: integer
    Ticket:
      type: object
      required:
        - id
        - stake
        - timestamp
      properties:
        id:
          type: uuid
        stake:
          type: integer
        timestamp:
          type: date
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string